cmdhistory=[";; Switching to compojure-intro.handler namespace" ";; Switching to compojure-intro.test.handler namespace" "(app (request \:get \\"/\\"))" "(app (request \:get \\"/abba\\"))" ";; Switching to compojure-intro.handler namespace" "(generate-smile {\:foo \\"bar\\" \:baz 5})" ";; Switching to compojure-intro.handler namespace" "(json {\:a 1})" ";; Switching to compojure-intro.handler namespace" "(json {\:a 1})" ";; Switching to compojure-intro.handler namespace" "(json {\:a 1})" ";; Switching to compojure-intro.handler namespace" "(json {\:a 1})" "(cheshire/encode \\"1\\")" "(cheshire/encode {\:a 1})" "(cheshire/encode {\\"a\\" 1})" "(response (cheshire/encode {\\"a\\" 1}))" "(content-type (response (cheshire/encode {\\"a\\" 1})) \\"application/json; charset\=utf-8\\")" ";; Switching to compojure-intro.handler namespace" "(json {\:a 1})" ";; Switching to compojure-intro.mongo namespace" "(mc/find \:pizza)" "(mc/find-maps \:pizza)" "(mc/insert \:pizza {\:name \\"quatro\\"})" "(mc/find-maps \:pizza)" "(mc/insert \:pizza {\:name \\"bella roma\\"\\n                   \:toppings [\:a \:b \:c]})" "(mc/find-maps \:pizza)" "(mc/find-maps \:pizza {\:toppings {$in \:a}})" "(mc/find-maps \:pizza {\:toppings {$in [\:a]}})" "(mc/find-maps \:pizza {\:toppings {$in [\:a]}} {\:_id 0})" "(mc/find-maps \:pizza {\:toppings {$in [\:a]}} {\:_id 0 \:name 1})" ";; Switching to compojure-intro.handler namespace" "(clojure.core/ns compojure-intro.mongo)\\n(mc/remove \:pizza)\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\n(mc/insert \:pizza {\:name \\"quatro\\"})\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\n(mc/insert \:pizza {\:name \\"opera\\"})\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\n(mc/find-maps \:pizza)\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\n(mc/insert \:pizza {\:name \\"quatro\\"})\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\nnull\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\n(mc/insert \:pizza {\:name \\"quatro\\"})\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\nnull\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\n(mc/find-maps \:pizza)\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\n(mc/insert \:pizza {\:name \\"quatro\\"})\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\nnull\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\n(mc/find-maps \:pizza)\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\n(mc/remove \:pizza)\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\n(mc/find-maps \:pizza)\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\n(mc/insert \:pizza {\:name \\"quatro\\"})\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\n(mc/insert \:pizza {\:name \\"opera\\"})\\n(clojure.core/ns compojure-intro.handler)" "(clojure.core/ns compojure-intro.mongo)\\n(mc/find-maps \:pizza)\\n(clojure.core/ns compojure-intro.handler)" ";; Switching to compojure-intro.mongo namespace" ";; Switching to compojure-intro.handler namespace" "(clojure.core/ns kiekkoimutin.core)\\n(defn fetch-url [url] (enlive/html-resource (java.net.URL. url)))\\n\\n(clojure.core/ns compojure-intro.handler)" ";; Switching to compojure-intro.test.handler-itest namespace"]
eclipse.preferences.version=1
